// <auto-generated />
using System;
using Api_Agendamento.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api_Agendamento.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250815001533_CriacaoInicial")]
    partial class CriacaoInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Api_Agendamento.Models.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Local")
                        .HasColumnType("longtext");

                    b.Property<string>("Observacao")
                        .HasColumnType("longtext");

                    b.Property<int?>("ProfissionalId")
                        .HasColumnType("int");

                    b.Property<int>("StatusAgendamento")
                        .HasColumnType("int");

                    b.Property<int>("StatusPagamento")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProfissionalId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("Api_Agendamento.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Api_Agendamento.Models.Profissional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Profissionals");
                });

            modelBuilder.Entity("Api_Agendamento.Models.RamoProfissional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NomeRamo")
                        .HasColumnType("longtext");

                    b.Property<int?>("ProfissionalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfissionalId");

                    b.ToTable("RamoProfissionals");
                });

            modelBuilder.Entity("Api_Agendamento.Models.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AgendamentoId")
                        .HasColumnType("int");

                    b.Property<int>("DuracaoMinutos")
                        .HasColumnType("int");

                    b.Property<string>("NomeServico")
                        .HasColumnType("longtext");

                    b.Property<double>("Preco")
                        .HasColumnType("double");

                    b.Property<int?>("ProfissionalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgendamentoId");

                    b.HasIndex("ProfissionalId");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("Api_Agendamento.Models.Agendamento", b =>
                {
                    b.HasOne("Api_Agendamento.Models.Cliente", "Cliente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ClienteId");

                    b.HasOne("Api_Agendamento.Models.Profissional", "Profissional")
                        .WithMany()
                        .HasForeignKey("ProfissionalId");

                    b.Navigation("Cliente");

                    b.Navigation("Profissional");
                });

            modelBuilder.Entity("Api_Agendamento.Models.RamoProfissional", b =>
                {
                    b.HasOne("Api_Agendamento.Models.Profissional", null)
                        .WithMany("RamoProfissional")
                        .HasForeignKey("ProfissionalId");
                });

            modelBuilder.Entity("Api_Agendamento.Models.Servico", b =>
                {
                    b.HasOne("Api_Agendamento.Models.Agendamento", null)
                        .WithMany("Servicos")
                        .HasForeignKey("AgendamentoId");

                    b.HasOne("Api_Agendamento.Models.Profissional", null)
                        .WithMany("Servicos")
                        .HasForeignKey("ProfissionalId");
                });

            modelBuilder.Entity("Api_Agendamento.Models.Agendamento", b =>
                {
                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("Api_Agendamento.Models.Cliente", b =>
                {
                    b.Navigation("Agendamentos");
                });

            modelBuilder.Entity("Api_Agendamento.Models.Profissional", b =>
                {
                    b.Navigation("RamoProfissional");

                    b.Navigation("Servicos");
                });
#pragma warning restore 612, 618
        }
    }
}
